/*========== base styles ==========*/

body {
  margin: 0;
  background-color: rgb(7,65,97);
  box-shadow: inset 0px -70px 112px -62px rgba(37,37,37,.9);
  position: absolute; /* fixes box shadow margin issue */
  width: 100%; /* fixes box shadow margin issue */
  min-height: 900px; /* fixes box shadow margin issue */
  /*fonts*/
  font-size: 14px;
  line-height: 18px;
  font-family: 'Source Sans Pro', sans-serif;
  color: rgb(255, 255, 255);
}

a {
  color: inherit;
  text-decoration: none;
  transition: opacity 1s;
  cursor: pointer;
}

a:hover,
a:focus {
  opacity: 0.6;
  text-decoration: underline;
}

p a {
  text-decoration: underline;
}

input[type="text"] {
  border: none;
  color: #000;
  text-shadow: 1px 1px 1px rgba(0,0,0,0.004);
}


/*========== structure classes ==========*/

#content {
  width: 950px;
  margin: 77px auto 50px;
  position: relative;
  z-index: 1;
}

#pageNav {
  position: fixed;
  top: 0;
  z-index: 3;
}

#sideBar {
  position: absolute;
  right: 0;
  z-index: 2;
}

.mainContainer {
  position: relative;
  overflow: hidden;
}

.img-rsp {
  display: block;
  max-width: 100%;
  height: auto;
}

.bar {
  height: 50px;
  padding-left: 15px;
  padding-right: 15px;
}

.bar.barFlush {
  padding-left: 0;
  padding-right: 0;
}

.barTxt {
  height: 50px;
  line-height: 50px;
}

.navBar {
  /* use for horizontal nav structures */
  display: flex;
  align-items: center;
  width: 100%;
  padding-top: 10px;
  padding-bottom: 10px;
  box-sizing: border-box;
}

.navBar .navEnd {
  /* container for nav elements on the right side */
  display: flex;
  flex-grow: 1;
  justify-content: flex-end;
}

.nav-ctrlGroup {
  /* use for any cluster of nav controls */
  padding-left: 10px;
  position: relative;
}

.nav-ctrlGroup:first-child {
  padding-left: 0;
}

.flexContainer {
  overflow: hidden;
}

.flexRow {
  display: flex;
  align-content: flex-start;
  flex-wrap: wrap;
  width: 100%;
  /* reset styles if applied to a list item */
  padding: 0;
}

.flexRow-center {
  justify-content: center;
}

.flexRow [class |= "flexCol"] {
  box-sizing: border-box;
}

.flexRow.pad [class |= "flexCol"] {
  padding-left: 5px;
  padding-right: 5px;
}

.flexRow.pad [class |= "flexCol"]:first-child {
  padding-left: 0;
}

.flexRow.pad [class |= "flexCol"]:last-child {
  padding-right: 0;
}

.flexRow .flexCol-12 {
  /* normally you can make it 100% wide by not using a column. This is here if you need to switch column sizes dynamically. */
  width: 100%;
}

.flexRow .flexCol-11 { flex-basis: 91.66666666666666%; }

.flexRow .flexCol-10 { flex-basis: 83.33333333333334%; }

.flexRow .flexCol-9 { flex-basis: 75%; }

.flexRow .flexCol-8 { flex-basis: 66.66666666666666%; }

.flexRow .flexCol-7 { flex-basis: 58.333333333333336%; }

.flexRow .flexCol-6 { flex-basis: 50%; }

.flexRow .flexCol-5 { flex-basis: 41.66666666666667%; }

.flexRow .flexCol-4 { flex-basis: 33.33333333333333%; }

.flexRow .flexCol-3 { flex-basis: 25%; }

.flexRow .flexCol-2 { flex-basis: 16.666666666666664%;; }

.flexRow .flexCol-1 { flex-basis: 8.333333333333332%; }

.flexExpand {
  /* use to make only one item in a flex row expand */
  flex-grow: 1;
}

.gridItem {
  box-sizing: border-box;
  padding: 25px 33px;
}

.itemImg {
  height: 250px;
  width: 250px;
  background-image: url(../imgs/defaultItem.png);
  background-size: cover;
  background-position: center;
  border-radius: 4px;
}

.itemImg.itemImg-large {
  /* flex row collapses unless a specific height is set */
  height: 357px;
  width: 357px;
}

.itemImg.itemImg-small {
  height: 82px;
  width: 82px;
}

.rowItem {
  flex-grow: 1;
  padding: 10px 15px;
}

.rowItem input[type=radio] {
  vertical-align: middle;
  margin-top: 0;
}

.btn {
  display: inline-block;
  padding: 6px 12px;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
}

.thumbnail {
  float: left;
  height: 30px;
  width: 30px;
  margin-right: 6px;
  background-size: cover;
  border-radius: 2px;
}

.thumbnail-large {
  height: 80px;
  width: 80px;
}

.row10 {
  margin-bottom: 10px;
}

.row20 {
  margin-bottom: 20px;
}

.rowTop20 {
  margin-top: 20px;
}

.pad15 {
  padding-left: 15px;
  padding-right: 15px;
}

.pad20 {
  padding-left: 20px;
  padding-right: 20px;
}

.popMenu {
  position: absolute;
  z-index: 1;
}

.modal {
  position: fixed;
  display: block;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.modal.modal-navOffset {
  top: 50px;
}

.modal-child {
  width: 525px;
  height: 590px;
  margin: 80px auto 0 auto;
  position: relative;
}

.modal.modal-navOffset .modal-child {
  margin-top: 25px;
}

.accordian {
  overflow: hidden;
  position: relative;
}

.accordian > .accordian-window {
  position: absolute;
}

.accordian > .accordian-window > .accordian-child {
  float: left;
}

/*========== typography ==========*/

h1,h2,h3 {
  margin: 20px 0;
  line-height: 1.2;
  font-weight: 700;
}

h4,h5,h6 {
  margin: 10px 0;
  line-height: 1;
}

.h3, h3 {
  font-size: 18px;
}

.h5, h5 {
  font-size: 16px;
}

.h6, h6 {
  font-size: 15px;
}

.txt-center {
  text-align: center;
}

.txt-fade {
  opacity: 0.75;
}

.txt-unleaded {
  line-height: 1;
}

.unbold {
  font-weight: 400;
}
/*========== skin classes ==========*/

.body-neutral {
  background-color: #2a2a2a;
}

.navBar {
  background-color: #327EB8;
}

.body-neutral .navBar {
  background-color: #575656;
}

.mainContainer {
  background-color: #086A9E;
}

.body-neutral .mainContainer {
  background-color: #4a4848;
}

.modal-opaque {
  background-color: rgb(7,65,97);
  box-shadow: inset 0px -70px 112px -62px rgba(37,37,37,.9);
}

.modal-opaque.modal-navBlock {
  background: linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.2) 50px, rgba(7,65,97,1) 51px);
}

.modal-childMain {
  border-radius: 3px;
  background-color: #327eb8;
  box-shadow: 0px 0 0 rgba(0, 0, 0, 0.15);
}

.flex-border > .flexRow {
  /* hide the extra border on the right and bottom sides */
  margin: 0 -2px -2px 0;
  width: auto;
  overflow: hidden;
}

.flex-border > .flexRow > [class |= "flexCol"] {
  border-right: 1px solid rgba(255,255,255,0.2);
  border-bottom: 1px solid rgba(255,255,255,0.2);
}

.flex-border > .flexRow > .flexRow {
  /* containing row has a list of rows inside it */
  border-bottom: 1px solid rgba(255,255,255,0.2);
}

.txtField {
  width: 100%;
  height: 32px;
  border-radius: 4px;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.15);
  opacity: .85;
  transition: opacity .3s cubic-bezier(0, 0, 0.2, 1);
}

.txtFieldWrapper {
  position: relative;
  width: 100%;
}

.txtFieldWrapper:before {
  font-family: Ionicons;
  position: absolute;
  top: 7px;
  left: 7px;
  font-size: 18px;
  color: #000;
  opacity: 0.4;
  z-index: 1;
  text-shadow: 1px 1px 1px rgba(0,0,0,0.004);
}

.searchWrapper:before {
  content: "\f4a5"
}

.searchWrapper .txtField {
  text-indent: 24px; /* make room for icon */
}

.txtField-bar,
input[type="text"].txtField-bar {
  background: none;
  border-radius: 0;
  opacity: 1;
  color: #fff;
  padding: 13px;
  height: 45px;
  box-shadow: none;
}

.txtField-bar::-webkit-input-placeholder,
input[type="text"].txtField-bar::-webkit-input-placeholder {
  opacity: 1;
  color: #79a9c9;
}

.txtField-bar:focus {
  outline: none;
}

.txtFieldWrapper-bar:before {
  color: #fff;
  top: 15px;
  left: 15px;
  opacity: 1;
}

.btn {
  display: block;
  height: 32px;
  min-width: 32px;
  line-height: 32px;
  float: left;
  background-color: #086A9E; /* default color */
  padding:0;
  border-radius: 4px;
  box-sizing: border-box;
}

.btn:hover,
.btn:focus {
  text-decoration: none;
}

.btn:before {
  line-height: 32px;
}

.body-neutral .btn {
  background-color: #4a4848;
}

.btn.btn-txt {
  /* button with text */
  padding: 0 22px;
}

.btn.btn-light {
  /* 20% over background */
  background-color: rgba(255,255,255,0.2);
}

.btn.btn-c1 {
  background-color: #327EB8;
}

.btn.btn-win {
  border-radius: 6px;
  width: 12px;
  min-width: 0;
  height: 12px;
  background-color: #fff;
  margin: 0 2px;
  padding: 0;
}

.btn.btn-win.btn-winClose {
  background-color: #E45A5A;
}

.btn.btn-win.btn-winMin {
  background-color: #F8E71C;
}

.btn.btn-win.btn-winMax {
  background-color: #B8E986;
}

.btn.btn-bar {
  border-radius: 0;
  min-width: 95px;
  text-align: center;
  background-color: #327EB8;
  border-right: 1px solid #086A9E;
  height: 50px;
  line-height: 50px;
}

.body-neutral .btn.btn-bar {
  background-color: #575656;
  border-right: 1px solid #4a4848;
}

.btn.btn-bar.active {
  background-color: #086A9E;
}

.body-neutral .btn.btn-bar.active {
  background-color: #4a4848;
}

.btn.btn-bar.btn-tab {
  border-top-right-radius: 4px;
  border-top-left-radius: 4px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  border: none;
  height: 46px;
  line-height: 46px;
  margin-top: 4px;
}

.btn.btn-bar.btn-tab:first-child {
  border-top-left-radius: 0px;
}

.btn.btn-wide {
  width: 100%;
  border: none;
}

.btn.btn-half {
  width: 50%;
}

.btn.btn-half.btn-bar:last-child,
.btn.btn-wide.btn-bar:last-child {
  border-right: none;
}

.btn.btn-togLeft,
.btn.btn-togMid,
.btn.btn-togRight {
  /* creates a set of buttons flush with each other */
  float: left;
}

.btn.btn-togLeft {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.btn.btn-togRight {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.btn.btn-back:before,
.btn.btn-fwd:before {
  opacity: 0.3;
}

.btn.btn-back.active:before,
.btn.btn-fwd.active:before {
  opacity: 1;
}

.btn.btn-profile {
  background-image: url('../imgs/defaultUser.png');
  background-size: contain;
}

.popMenu-navBar {
  top: 36px;
  right: 10px;
  background-color: #252525;
  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.10);
  border-radius: 4px;
  color: #fff;
  font-size: 13px;
  padding: 10px 15px;
  width: 230px;
}

.popMenu-navBar a {
  display: block;
  line-height: 25px;
  transition: opacity 1s;
}

.popMenu-navBar a:hover {
  opacity: 0.6;
}

.popMenu-navBar hr {
  margin: 0.5em -15px;
  border: 1px solid rgba(255,255,255,0.2);
}

.banner-large {
  position: relative;
  height: 400px;
  background-size: cover;
}

.shadow-inner1 {
  box-shadow: inset 0px -130px 112px -52px rgba(25,25,25,1);
}

/*========== one-off classes ==========*/

.homeModal-hero {
  height: 250px;
  width: 525px;
  background-image: url('../imgs/obSettingsHero.jpg');
  background-repeat: no-repeat;
  position: relative;
}

.homeModal-heroText {
  position: absolute;
  bottom: 30px;
  color: #fff;
  width: 80%;
  margin: 0 10%;
  text-align: center;
}

.homeModal-accordian {
  height: 340px;
}

.homeModal-settings {
  height: 198px;
  overflow-y: auto;
  background-color: #086A9E;
}

.homeModal-settings.homeModal-settings-noSearch {
  height: 240px;
}

.homeModal-avatarPreview {
  background-color: #327EB8;
  border-radius: 70px;
  height: 130px;
  width: 130px;
  margin-top: 30px;
}


/*========== utility classes ==========*/

/* the #ov1 id is on the HTML tag. It is used to force specificity
   higher than other class combinations on the page. This is preferable
   to using an important tag. Only use it on rules that must override
   all other rules. */

/* be aware that float and clear have no affect on flex items. */


.clearfix:before,
.clearfix:after {
  display: table;
  content: " ";
}

.clearfix:after {
  clear: both;
}

#ov1 .pull-right {
  float: right;
}

#ov1 .pull-left {
  float: left;
}

#ov1 .align-bottom {
  position: absolute;
  bottom: 0;
}

#ov1 .hide {
  display: none;
}

#ov1 .show {
  display: block;
}

#ov1 .invisible {
  visibility: hidden;
}

.vCentered {
  /* must be inside a relatively positioned containing element */
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.hCentered {
  /* must be inside a relatively positioned containing element */
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.fullCentered {
  /* must be inside a relatively positioned containing element */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}